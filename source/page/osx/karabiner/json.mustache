<div class="container">
  <header>
    <div class="page-header">
      <h1>karabiner.json Reference Manual</h1>
    </div>
  </header>

  <div class="row">
    <div class="col-md-9 pqrs-docs-container">
      <section>
        <div class="page-header">
          <h1 id="location">File location</h1>
        </div>

        <table class="table">
          <tbody>
            <tr>
              <th><b>~/.config/karabiner/karabiner.json</b></th>
              <td>
                Main configuration file.<br />
                Karabiner-Elements watches this file and reload it automatically when it is updated.
              </td>
            </tr>
            <tr>
              <th><b>~/.config/karabiner/assets/complex_modifications</b></th>
              <td>
                Imported complex_modifications files.<br />
                You can use them in <b>Preferences &gt; Complex Modifications &gt; Add rule</b>.
              </td>
            </tr>
          </tbody>
        </table>
      </section>

      <section>
        <div class="page-header">
          <h1 id="root-data-structure">karabiner.json data structure</h1>
        </div>

        <h2>karabiner.json</h2>

        {{#indented_json}}
          |{
          |    "global": {
          |        ...
          |    },
          |    "profiles": [
          |        {
          |            "name": "Profile name",
          |            "selected": true,
          |            "simple_modifications": [
          |                ...
          |            ],
          |            "fn_function_keys": [
          |                ...
          |            ],
          |            "complex_modifications": {
          |                "parameters": {
          |                    ...
          |                },
          |                "rules": [
          |                    ...
          |                ]
          |            },
          |            "virtual_hid_keyboard": {
          |                "keyboard_type": "ansi",
          |                "caps_lock_delay_milliseconds": 0
          |            },
          |            "devices": [
          |                ...
          |            ]
          |        },
          |        {
          |            "name": "Profile name",
          |            "selected": false,
          |            ...
          |        },
          |        ...
          |    ]
          |}
        {{/indented_json}}

        <h2 id="complex_modifications-data-structure">complex_modifications in <b>karabiner.json &gt; profiles</b></h2>

        {{#indented_json}}
          |{
          |    "complex_modifications": {
          |        "parameters": {
          |            ...
          |        },
          |        "rules": [
          |            {
          |                "description": "This description is shown in Preferences.",
          |                "manipulators": [
          |                    {
          |                        "type": "basic",
          |
          |                        "from": from event definition,
          |
          |                        "to": [
          |                            to event definition,
          |                            to event definition,
          |                            ...
          |                        ],
          |
          |                        "to_if_alone": [
          |                            to event definition,
          |                            to event definition,
          |                            ...
          |                        ],
          |
          |                        "to_after_key_up": [
          |                            to event definition,
          |                            to event definition,
          |                            ...
          |                        ],
          |
          |                        "to_delayed_action": {
          |                            "to_if_invoked": [
          |                                to event definition,
          |                                to event definition,
          |                                ...
          |                            ],
          |                            "to_if_canceled": [
          |                                to event definition,
          |                                to event definition,
          |                                ...
          |                            ]
          |                        },
          |
          |                        "conditions": [
          |                            condition definition,
          |                            condition definition,
          |                            ...
          |                        ],
          |
          |                        "parameters": {
          |                            ...
          |                        },
          |
          |                        "description": "Optional description for human"
          |                    },
          |                    {
          |                        "type": "basic",
          |                        ...
          |                    },
          |                    ...
          |                ]
          |            },
          |            {
          |                "description": "...",
          |                "manipulators": [
          |                    ...
          |                ]
          |            },
          |            ...
          |        ]
          |    }
          |}
        {{/indented_json}}
      </section>

      <section>
        <div class="page-header">
          <h1 id="complex_modifications-manipulator-priority">complex_modifications manipulator priority</h1>
        </div>

        <p>
          The manipulators are evaluated from the top to the bottom and the input event is manipulated only the first matched manipulator.
        </p>

        <p>
          In other words, if there are multiple manipulators which change the same key, the manipulator placed at the top is applied and other manipulators are ignored.
        </p>
      </section>

      <section>
        <h2 id="manipulator-definition">manipulator definition</h2>

        <table class="table">
          <tbody>
            <tr>
              <th>Name</th>
              <th>Required</th>
              <th>Description</th>
            </tr>
            <tr>
              <td><code>type</code></td>
              <td><code class="required">required</code></td>
              <td>Always <code>"type": "basic"</code></td>
            </tr>
            <tr>
              <td><code>from</code></td>
              <td><code class="required">required</code></td>
              <td>
                The name of key code, consumer key code or pointing button which you want to change.
                <a href="#from-event-definition">(detail)</a>
              </td>
            </tr>
            <tr>
              <td><code>to</code></td>
              <td><code class="optional">optional</code></td>
              <td>events which are sent when you press <code>from</code> key.</td>
            </tr>
            <tr>
              <td><code>to_if_alone</code></td>
              <td><code class="optional">optional</code></td>
              <td>events which are sent when you press <code>from</code> key alone.</td>
            </tr>
            <tr>
              <td><code>to_after_key_up</code></td>
              <td><code class="optional">optional</code></td>
              <td>events which are sent after you release <code>from</code> key.</td>
            </tr>
            <tr>
              <td><code>to_delayed_action</code></td>
              <td><code class="optional">optional</code></td>
              <td>
                <code>to_delayed_action</code> sends <code>to_delayed_action > to_if_invoked</code> events after 500 milliseconds at you press <code>from</code> key.<br />
                <code>to_delayed_action > to_if_canceled</code> events are sent if you press another key between <code>from</code> key and to_delayed_action invoked. (<code>to_if_invoked</code> events are not sent if <code>to_if_canceled</code> events are sent.)
              </td>
            </tr>
            <tr>
              <td><code>description</code></td>
              <td><code class="optional">optional</code></td>
              <td>A manipulator description for human.</td>
            </tr>
            <tr>
              <td><code>condition</code></td>
              <td><code class="optional">optional</code></td>
              <td>
                Manipulator is applied only if condition is matched. (The frontmost application, device, etc.)
              </td>
            </tr>
            <tr>
              <td><code>parameters</code></td>
              <td><code class="optional">optional</code></td>
              <td>
                Override parameters such as <code>to_delayed_action_delay_milliseconds</code>.
              </td>
            </tr>
          </tbody>
        </table>

        <h2 id="from-event-definition">from event definition</h2>

        {{#indented_json}}
          |{
          |    "from": {
          |        "key_code": "The name of key_code",
          |        "consumer_key_code": "The name of consumer_key_code",
          |        "pointing_button": "The name of pointing_button",
          |
          |        "modifiers": {
          |            "mandatory": [
          |                modifier,
          |                modifier,
          |                ...
          |            ],
          |            "optional": [
          |                modifier,
          |                modifier,
          |                ...
          |            ]
          |        }
          |    }
          |}
        {{/indented_json}}

        <table class="table">
          <tbody>
            <tr>
              <th>Name</th>
              <th>Required</th>
              <th>Description</th>
            </tr>
            <tr>
              <td><code>key_code</code></td>
              <td><code class="optional">optional</code></td>
              <td>
                <a href="document.html#eventviewer">You can find key_code by EventViewer.</a>
                <a href="https://github.com/tekezo/Karabiner-Elements/blob/master/src/apps/PreferencesWindow/PreferencesWindow/Resources/simple_modifications.json">(list)</a>
              </td>
            </tr>
            <tr>
              <td><code>consumer_key_code</code></td>
              <td><code class="optional">optional</code></td>
              <td>
                <code>key_code</code>, <code>consumer_key_code</code> and <code>pointing_button</code> are exclusive.<br />
                You can specify one of them.
              </td>
            </tr>
            <tr>
              <td><code>pointing_button</code></td>
              <td><code class="optional">optional</code></td>
              <td>
                Do not specify <code>"pointing_button": "button1"</code> in <code>from</code> unless you made new <code>button1</code> by other manipulator.
              </td>
            </tr>
            <tr>
              <td><code>modifiers</code></td>
              <td><code class="optional">optional</code></td>
              <td>
                Specify modifiers. (e.g., "change control-h to delete")
              </td>
            </tr>
          </tbody>
        </table>

        <h3 id="from-event-definition-modifiers">modifiers in from event definition</h3>

        <code>modifiers</code> works as follows.

        <table class="table">
          <tbody>
            <tr>
              <th>When <code>modifiers</code> is omitted</th>
              <td>
                Events are manipulated only if modifier keys are not pressed.
              </td>
            </tr>
            <tr>
              <th>When <code>modifiers > mandatory</code> is specified</th>
              <td>
                Events are manipulated if mandatory modifiers are pressed. <br />
                Mandatory modifiers are omitted from <code>to events</code>.
              </td>
            </tr>
            <tr>
              <th>When <code>modifiers > optional</code> is specified</th>
              <td>
                Events are also manipulated even if optional modifiers are pressed.<br />
                Optional modifiers are kept in <code>to events</code>.
              </td>
            </tr>
          </tbody>
        </table>

        <h3 id="from-event-definition-examples">Examples</h3>

        <div class="panel panel-default">
          <div class="panel-body">
            <p>Change escape to tab without <code>modifiers</code></p>

            {{#indented_json}}
              |{
              |    "type": "basic",
              |    "from": {
              |        "key_code": "escape"
              |    },
              |    "to": [
              |        {
              |            "key_code": "tab"
              |        }
              |    ]
              |}
            {{/indented_json}}

            <table class="table">
              <tbody>
                <tr>
                  <th>key</th>
                  <th>manipulated</th>
                  <th>result</th>
                </tr>
                <tr>
                  <td>escape</td>
                  <td><b>manipulated</b></td>
                  <td>tab</td>
                </tr>
                <tr>
                  <td>left_shift + escape</td>
                  <td>not manipulated</td>
                  <td>left_shift + escape</td>
                </tr>
                <tr>
                  <td>left_control + escape</td>
                  <td>not manipulated</td>
                  <td>left_control + escape</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <div class="panel panel-default">
          <div class="panel-body">
            <p>Change escape to tab with <code>optional modifiers</code></p>

            {{#indented_json}}
              |{
              |    "type": "basic",
              |    "from": {
              |        "key_code": "escape",
              |        "modifiers": {
              |            "optional": [
              |                "left_shift",
              |                "left_control"
              |            ]
              |        }
              |    },
              |    "to": [
              |        {
              |            "key_code": "tab"
              |        }
              |    ]
              |}
            {{/indented_json}}

            <table class="table">
              <tbody>
                <tr>
                  <th>key</th>
                  <th>manipulated</th>
                  <th>result</th>
                </tr>
                <tr>
                  <td>escape</td>
                  <td><b>manipulated</b></td>
                  <td>tab</td>
                </tr>
                <tr>
                  <td>left_shift + escape</td>
                  <td><b>manipulated</b></td>
                  <td>left_shift + tab</td>
                </tr>
                <tr>
                  <td>left_control + escape</td>
                  <td><b>manipulated</b></td>
                  <td>left_control + tab</td>
                </tr>
                <tr>
                  <td>left_option + escape</td>
                  <td>not manipulated</td>
                  <td>left_option + escape</td>
                </tr>
                <tr>
                  <td>left_shift + left_option + escape</td>
                  <td>not manipulated</td>
                  <td>
                    left_shift + left_option + escape<br />
                    (because left_option is not in optional modifiers)
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <div class="panel panel-default">
          <div class="panel-body">
            <p>Change control-h to delete without <code>optional modifiers</code></p>

            {{#indented_json}}
              |{
              |    "type": "basic",
              |    "from": {
              |        "key_code": "h",
              |        "modifiers": {
              |            "mandatory": [
              |                "control"
              |            ]
              |        }
              |    },
              |    "to": [
              |        {
              |            "key_code": "delete_or_backspace"
              |        }
              |    ]
              |}
            {{/indented_json}}

            <table class="table">
              <tbody>
                <tr>
                  <th>key</th>
                  <th>manipulated</th>
                  <th>result</th>
                </tr>
                <tr>
                  <td>h</td>
                  <td>not manipulated</td>
                  <td>h</td>
                </tr>
                <tr>
                  <td>left_control + h</td>
                  <td><b>manipulated</b></td>
                  <td>delete_or_backspace</td>
                </tr>
                <tr>
                  <td>left_control + left_option + h</td>
                  <td>not manipulated</td>
                  <td>
                    left_control + left_option + h<br />
                    (because left_option is not in optional modifiers)
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <div class="panel panel-default">
          <div class="panel-body">
            <p>Change control-h to delete with <code>optional modifiers</code></p>

            {{#indented_json}}
              |{
              |    "type": "basic",
              |    "from": {
              |        "key_code": "h",
              |        "modifiers": {
              |            "mandatory": [
              |                "control"
              |            ],
              |            "optional": [
              |                "caps_lock",
              |                "option"
              |            ]
              |        }
              |    },
              |    "to": [
              |        {
              |            "key_code": "delete_or_backspace"
              |        }
              |    ]
              |}
            {{/indented_json}}

            <table class="table">
              <tbody>
                <tr>
                  <th>key</th>
                  <th>manipulated</th>
                  <th>result</th>
                </tr>
                <tr>
                  <td>h</td>
                  <td>not manipulated</td>
                  <td>h</td>
                </tr>
                <tr>
                  <td>left_control + h</td>
                  <td><b>manipulated</b></td>
                  <td>delete_or_backspace</td>
                </tr>
                <tr>
                  <td>left_control + left_option + h</td>
                  <td><b>manipulated</b></td>
                  <td>left_option + delete_or_backspace</td>
                </tr>
                <tr>
                  <td>left_control + left_shift + h</td>
                  <td>not manipulated</td>
                  <td>
                    left_control + left_shift + h<br />
                    (because left_shift is not in optional modifiers)
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

      </section>

    </div>
    <div class="col-md-3">
      {{> ../../pqrs_tabs }}
    </div>
  </div>
</div>
